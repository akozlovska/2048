{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/Field.js","src/scripts/Block.js"],"sourcesContent":["\"use strict\";\nvar $de4b3a8076847854$exports = {};\n\"use strict\";\nconst $de4b3a8076847854$var$GRID_SIZE = 4;\nclass $de4b3a8076847854$var$Field {\n    constructor(fieldElement){\n        this.cells = $de4b3a8076847854$var$createCellElements(fieldElement).map((cellElement, index)=>{\n            return new $de4b3a8076847854$var$Cell(cellElement, index % $de4b3a8076847854$var$GRID_SIZE, Math.floor(index / $de4b3a8076847854$var$GRID_SIZE));\n        });\n    }\n    get cellsByColumns() {\n        return this.cells.reduce((gridColumns, cell)=>{\n            gridColumns[cell.x] = gridColumns[cell.x] || [];\n            gridColumns[cell.x][cell.y] = cell;\n            return gridColumns;\n        }, []);\n    }\n    get cellsByRows() {\n        return this.cells.reduce((gridRows, cell)=>{\n            gridRows[cell.y] = gridRows[cell.y] || [];\n            gridRows[cell.y][cell.x] = cell;\n            return gridRows;\n        }, []);\n    }\n    get randomEmptyCell() {\n        const emptyCells = this.cells.filter((cell)=>cell.block === null);\n        const random = Math.floor(Math.random() * emptyCells.length);\n        return emptyCells[random];\n    }\n}\nclass $de4b3a8076847854$var$Cell {\n    constructor(cellElement, x, y){\n        this.cellElement = cellElement;\n        this.x = x;\n        this.y = y;\n        this.cellElement.style.setProperty(\"--x\", x);\n        this.cellElement.style.setProperty(\"--y\", y);\n        this.block = null;\n        this.mergeBlock = null;\n    }\n    get block() {\n        return this._block;\n    }\n    set block(value) {\n        this._block = value;\n        if (value !== null) {\n            this._block.x = this.x;\n            this._block.y = this.y;\n        }\n    }\n    get mergeBlock() {\n        return this._mergeBlock;\n    }\n    set mergeBlock(newMergeBlock) {\n        this._mergeBlock = newMergeBlock;\n        if (newMergeBlock !== null) {\n            this._mergeBlock.x = this.x;\n            this._mergeBlock.y = this.y;\n        }\n    }\n    canAccept(block) {\n        return this.block === null || this.mergeBlock === null && this.block.value === block.value;\n    }\n    mergeBlocks() {\n        if (this.block !== null && this.mergeBlock !== null) {\n            this.block.value = this.block.value + this.mergeBlock.value;\n            this.mergeBlock.blockElement.remove();\n            this.mergeBlock = null;\n            return this.block.value;\n        }\n    }\n}\nfunction $de4b3a8076847854$var$createCellElements(fieldElement) {\n    const cells = [];\n    for(let i = 0; i < $de4b3a8076847854$var$GRID_SIZE * $de4b3a8076847854$var$GRID_SIZE; i++){\n        const cell = document.createElement(\"div\");\n        cell.classList.add(\"cell\");\n        cells.push(cell);\n        fieldElement.append(cell);\n    }\n    return cells;\n}\n$de4b3a8076847854$exports = {\n    Field: $de4b3a8076847854$var$Field\n};\n\n\nvar $09e991522ca7e64e$require$Field = $de4b3a8076847854$exports.Field;\nvar $65e0dcc5c1fa3a47$exports = {};\n\"use strict\";\nclass $65e0dcc5c1fa3a47$var$Block {\n    constructor(blockContainer, value = Math.random() < 0.1 ? 4 : 2){\n        this.blockElement = document.createElement(\"div\");\n        this.blockElement.classList.add(\"block\");\n        blockContainer.append(this.blockElement);\n        this.value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        this._value = newValue;\n        this.blockElement.textContent = newValue;\n        for (const className of this.blockElement.classList)if (className.includes(\"block--\")) this.blockElement.classList.remove(className);\n        this.blockElement.classList.add(`block--${newValue}`);\n    }\n    set x(value) {\n        this._x = value;\n        this.blockElement.style.setProperty(\"--x\", value);\n    }\n    set y(value) {\n        this._y = value;\n        this.blockElement.style.setProperty(\"--y\", value);\n    }\n}\n$65e0dcc5c1fa3a47$exports = {\n    Block: $65e0dcc5c1fa3a47$var$Block\n};\n\n\nvar $09e991522ca7e64e$require$Block = $65e0dcc5c1fa3a47$exports.Block;\nconst $09e991522ca7e64e$var$gameField = document.querySelector(\".game-field\");\nlet $09e991522ca7e64e$var$field = new $09e991522ca7e64e$require$Field($09e991522ca7e64e$var$gameField);\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nlet $09e991522ca7e64e$var$currentScore = 0;\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$allowMove = ()=>{\n    window.addEventListener(\"keydown\", $09e991522ca7e64e$var$handleMove, {\n        once: true\n    });\n};\nconst $09e991522ca7e64e$var$resetGame = ()=>{\n    while($09e991522ca7e64e$var$gameField.firstChild)$09e991522ca7e64e$var$gameField.removeChild($09e991522ca7e64e$var$gameField.lastChild);\n    $09e991522ca7e64e$var$field = new $09e991522ca7e64e$require$Field($09e991522ca7e64e$var$gameField);\n    $09e991522ca7e64e$var$currentScore = 0;\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$currentScore;\n};\nconst $09e991522ca7e64e$var$onStart = ()=>{\n    if ($09e991522ca7e64e$var$startButton.textContent === \"Restart\") {\n        if (!$09e991522ca7e64e$var$loseMessage.classList.contains(\"hidden\")) $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n        if (!$09e991522ca7e64e$var$winMessage.classList.contains(\"hidden\")) $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$resetGame();\n    } else {\n        $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n    }\n    $09e991522ca7e64e$var$field.randomEmptyCell.block = new $09e991522ca7e64e$require$Block($09e991522ca7e64e$var$gameField);\n    $09e991522ca7e64e$var$field.randomEmptyCell.block = new $09e991522ca7e64e$require$Block($09e991522ca7e64e$var$gameField);\n    $09e991522ca7e64e$var$allowMove();\n};\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", $09e991522ca7e64e$var$onStart);\n$09e991522ca7e64e$var$startButton.addEventListener(\"keydown\", (e)=>{\n    if (e.code === \"Enter\" || e.code === \"Space\") e.preventDefault();\n});\nconst $09e991522ca7e64e$var$handleMove = (e)=>{\n    switch(e.key){\n        case \"ArrowRight\":\n            if (!$09e991522ca7e64e$var$canMoveRight()) {\n                $09e991522ca7e64e$var$allowMove();\n                return;\n            }\n            $09e991522ca7e64e$var$moveRight();\n            break;\n        case \"ArrowLeft\":\n            if (!$09e991522ca7e64e$var$canMoveLeft()) {\n                $09e991522ca7e64e$var$allowMove();\n                return;\n            }\n            $09e991522ca7e64e$var$moveLeft();\n            break;\n        case \"ArrowUp\":\n            if (!$09e991522ca7e64e$var$canMoveUp()) {\n                $09e991522ca7e64e$var$allowMove();\n                return;\n            }\n            $09e991522ca7e64e$var$moveUp();\n            break;\n        case \"ArrowDown\":\n            if (!$09e991522ca7e64e$var$canMoveDown()) {\n                $09e991522ca7e64e$var$allowMove();\n                return;\n            }\n            $09e991522ca7e64e$var$moveDown();\n            break;\n        default:\n            $09e991522ca7e64e$var$allowMove();\n            return;\n    }\n    $09e991522ca7e64e$var$field.cells.forEach((cell)=>{\n        const newMerge = cell.mergeBlocks();\n        if (newMerge) $09e991522ca7e64e$var$currentScore += newMerge;\n    });\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$currentScore;\n    if ($09e991522ca7e64e$var$field.cells.some((cell)=>cell.block && cell.block.value === 2048)) {\n        $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n        return;\n    }\n    $09e991522ca7e64e$var$field.randomEmptyCell.block = new $09e991522ca7e64e$require$Block($09e991522ca7e64e$var$gameField);\n    if (!$09e991522ca7e64e$var$canMoveUp() && !$09e991522ca7e64e$var$canMoveDown() && !$09e991522ca7e64e$var$canMoveLeft() && !$09e991522ca7e64e$var$canMoveRight()) {\n        $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n        return;\n    }\n    $09e991522ca7e64e$var$allowMove();\n};\nconst $09e991522ca7e64e$var$slideBlocks = (groupsOfCells)=>{\n    groupsOfCells.forEach((group)=>{\n        for(let i = 1; i < group.length; i++){\n            const currentCell = group[i];\n            if (currentCell.block === null) continue;\n            let lastEmptyCell = null;\n            for(let j = i - 1; j >= 0; j--){\n                const previousCell = group[j];\n                if (!previousCell.canAccept(currentCell.block)) break;\n                lastEmptyCell = previousCell;\n            }\n            if (lastEmptyCell !== null) {\n                if (lastEmptyCell.block) lastEmptyCell.mergeBlock = currentCell.block;\n                else lastEmptyCell.block = currentCell.block;\n                currentCell.block = null;\n            }\n        }\n    });\n};\nconst $09e991522ca7e64e$var$moveLeft = ()=>{\n    return $09e991522ca7e64e$var$slideBlocks($09e991522ca7e64e$var$field.cellsByRows);\n};\nconst $09e991522ca7e64e$var$moveRight = ()=>{\n    return $09e991522ca7e64e$var$slideBlocks($09e991522ca7e64e$var$field.cellsByRows.map((row)=>[\n            ...row\n        ].reverse()));\n};\nconst $09e991522ca7e64e$var$moveUp = ()=>{\n    return $09e991522ca7e64e$var$slideBlocks($09e991522ca7e64e$var$field.cellsByColumns);\n};\nconst $09e991522ca7e64e$var$moveDown = ()=>{\n    return $09e991522ca7e64e$var$slideBlocks($09e991522ca7e64e$var$field.cellsByColumns.map((column)=>[\n            ...column\n        ].reverse()));\n};\nconst $09e991522ca7e64e$var$canMove = (groups)=>{\n    return groups.some((group)=>{\n        return group.some((cell, index)=>{\n            if (index === 0 || cell.block === null) return false;\n            const previousCell = group[index - 1];\n            return previousCell.canAccept(cell.block);\n        });\n    });\n};\nconst $09e991522ca7e64e$var$canMoveLeft = ()=>{\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$field.cellsByRows);\n};\nconst $09e991522ca7e64e$var$canMoveRight = ()=>{\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$field.cellsByRows.map((row)=>[\n            ...row\n        ].reverse()));\n};\nconst $09e991522ca7e64e$var$canMoveUp = ()=>{\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$field.cellsByColumns);\n};\nconst $09e991522ca7e64e$var$canMoveDown = ()=>{\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$field.cellsByColumns.map((column)=>[\n            ...column\n        ].reverse()));\n};\n\n\n//# sourceMappingURL=index.81fd8437.js.map\n","'use strict';\n\nconst { Field } = require('./Field');\nconst { Block } = require('./Block');\n\nconst gameField = document.querySelector('.game-field');\nlet field = new Field(gameField);\nconst score = document.querySelector('.game-score');\nlet currentScore = 0;\n\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startButton = document.querySelector('.start');\n\nconst allowMove = () => {\n  window.addEventListener('keydown', handleMove, { once: true });\n};\n\nconst resetGame = () => {\n  while (gameField.firstChild) {\n    gameField.removeChild(gameField.lastChild);\n  }\n\n  field = new Field(gameField);\n  currentScore = 0;\n  score.textContent = currentScore;\n};\n\nconst onStart = () => {\n  if (startButton.textContent === 'Restart') {\n    if (!loseMessage.classList.contains('hidden')) {\n      loseMessage.classList.add('hidden');\n    }\n\n    if (!winMessage.classList.contains('hidden')) {\n      winMessage.classList.add('hidden');\n    }\n\n    resetGame();\n  } else {\n    startMessage.classList.add('hidden');\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n  }\n\n  field.randomEmptyCell.block = new Block(gameField);\n  field.randomEmptyCell.block = new Block(gameField);\n  allowMove();\n};\n\nstartButton.addEventListener('click', onStart);\n\nstartButton.addEventListener('keydown', (e) => {\n  if (e.code === 'Enter' || e.code === 'Space') {\n    e.preventDefault();\n  }\n});\n\nconst handleMove = (e) => {\n  switch (e.key) {\n    case 'ArrowRight':\n      if (!canMoveRight()) {\n        allowMove();\n\n        return;\n      }\n      moveRight();\n      break;\n\n    case 'ArrowLeft':\n      if (!canMoveLeft()) {\n        allowMove();\n\n        return;\n      }\n      moveLeft();\n      break;\n\n    case 'ArrowUp':\n      if (!canMoveUp()) {\n        allowMove();\n\n        return;\n      }\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      if (!canMoveDown()) {\n        allowMove();\n\n        return;\n      }\n      moveDown();\n      break;\n\n    default:\n      allowMove();\n\n      return;\n  }\n\n  field.cells.forEach(cell => {\n    const newMerge = cell.mergeBlocks();\n\n    if (newMerge) {\n      currentScore += newMerge;\n    }\n  });\n  score.textContent = currentScore;\n\n  if (field.cells.some(cell => cell.block && cell.block.value === 2048)) {\n    winMessage.classList.remove('hidden');\n\n    return;\n  }\n\n  field.randomEmptyCell.block = new Block(gameField);\n\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\n    loseMessage.classList.remove('hidden');\n\n    return;\n  }\n\n  allowMove();\n};\n\nconst slideBlocks = (groupsOfCells) => {\n  groupsOfCells.forEach(group => {\n    for (let i = 1; i < group.length; i++) {\n      const currentCell = group[i];\n\n      if (currentCell.block === null) {\n        continue;\n      }\n\n      let lastEmptyCell = null;\n\n      for (let j = i - 1; j >= 0; j--) {\n        const previousCell = group[j];\n\n        if (!previousCell.canAccept(currentCell.block)) {\n          break;\n        }\n        lastEmptyCell = previousCell;\n      }\n\n      if (lastEmptyCell !== null) {\n        if (lastEmptyCell.block) {\n          lastEmptyCell.mergeBlock = currentCell.block;\n        } else {\n          lastEmptyCell.block = currentCell.block;\n        }\n        currentCell.block = null;\n      }\n    }\n  });\n};\n\nconst moveLeft = () => {\n  return slideBlocks(field.cellsByRows);\n};\n\nconst moveRight = () => {\n  return slideBlocks(field.cellsByRows\n    .map(row => [...row].reverse())\n  );\n};\n\nconst moveUp = () => {\n  return slideBlocks(field.cellsByColumns);\n};\n\nconst moveDown = () => {\n  return slideBlocks(field.cellsByColumns\n    .map(column => [...column].reverse())\n  );\n};\n\nconst canMove = (groups) => {\n  return groups.some(group => {\n    return group.some((cell, index) => {\n      if (index === 0 || cell.block === null) {\n        return false;\n      }\n\n      const previousCell = group[index - 1];\n\n      return previousCell.canAccept(cell.block);\n    });\n  });\n};\n\nconst canMoveLeft = () => {\n  return canMove(field.cellsByRows);\n};\n\nconst canMoveRight = () => {\n  return canMove(field.cellsByRows\n    .map(row => [...row].reverse())\n  );\n};\n\nconst canMoveUp = () => {\n  return canMove(field.cellsByColumns);\n};\n\nconst canMoveDown = () => {\n  return canMove(field.cellsByColumns\n    .map(column => [...column].reverse())\n  );\n};\n","'use strict';\n\nconst GRID_SIZE = 4;\n\nclass Field {\n  constructor(fieldElement) {\n    this.cells = createCellElements(fieldElement).map((cellElement, index) => {\n      return new Cell(\n        cellElement,\n        index % GRID_SIZE,\n        Math.floor(index / GRID_SIZE)\n      );\n    });\n  }\n\n  get cellsByColumns() {\n    return this.cells.reduce((gridColumns, cell) => {\n      gridColumns[cell.x] = gridColumns[cell.x] || [];\n      gridColumns[cell.x][cell.y] = cell;\n\n      return gridColumns;\n    }, []);\n  }\n\n  get cellsByRows() {\n    return this.cells.reduce((gridRows, cell) => {\n      gridRows[cell.y] = gridRows[cell.y] || [];\n      gridRows[cell.y][cell.x] = cell;\n\n      return gridRows;\n    }, []);\n  }\n\n  get randomEmptyCell() {\n    const emptyCells = this.cells.filter(cell => cell.block === null);\n    const random = Math.floor(Math.random() * emptyCells.length);\n\n    return emptyCells[random];\n  }\n};\n\nclass Cell {\n  constructor(cellElement, x, y) {\n    this.cellElement = cellElement;\n    this.x = x;\n    this.y = y;\n    this.cellElement.style.setProperty('--x', x);\n    this.cellElement.style.setProperty('--y', y);\n    this.block = null;\n    this.mergeBlock = null;\n  }\n\n  get block() {\n    return this._block;\n  }\n\n  set block(value) {\n    this._block = value;\n\n    if (value !== null) {\n      this._block.x = this.x;\n      this._block.y = this.y;\n    }\n  }\n\n  get mergeBlock() {\n    return this._mergeBlock;\n  }\n\n  set mergeBlock(newMergeBlock) {\n    this._mergeBlock = newMergeBlock;\n\n    if (newMergeBlock !== null) {\n      this._mergeBlock.x = this.x;\n      this._mergeBlock.y = this.y;\n    }\n  }\n\n  canAccept(block) {\n    return this.block === null\n      || (this.mergeBlock === null && this.block.value === block.value);\n  }\n\n  mergeBlocks() {\n    if (this.block !== null && this.mergeBlock !== null) {\n      this.block.value = this.block.value + this.mergeBlock.value;\n      this.mergeBlock.blockElement.remove();\n      this.mergeBlock = null;\n\n      return this.block.value;\n    }\n  }\n}\n\nfunction createCellElements(fieldElement) {\n  const cells = [];\n\n  for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\n    const cell = document.createElement('div');\n\n    cell.classList.add('cell');\n    cells.push(cell);\n    fieldElement.append(cell);\n  }\n\n  return cells;\n}\n\nmodule.exports = { Field };\n","'use strict';\n\nclass Block {\n  constructor(\n    blockContainer,\n    value = Math.random() < 0.1 ? 4 : 2\n  ) {\n    this.blockElement = document.createElement('div');\n    this.blockElement.classList.add('block');\n    blockContainer.append(this.blockElement);\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(newValue) {\n    this._value = newValue;\n    this.blockElement.textContent = newValue;\n\n    for (const className of this.blockElement.classList) {\n      if (className.includes('block--')) {\n        this.blockElement.classList.remove(className);\n      }\n    }\n    this.blockElement.classList.add(`block--${newValue}`);\n  }\n\n  set x(value) {\n    this._x = value;\n    this.blockElement.style.setProperty('--x', value);\n  }\n\n  set y(value) {\n    this._y = value;\n    this.blockElement.style.setProperty('--y', value);\n  }\n}\n\nmodule.exports = { Block };\n"],"names":["$de4b3a8076847854$var$Cell","constructor","cellElement","x","y","style","setProperty","block","mergeBlock","_block","value","_mergeBlock","newMergeBlock","canAccept","mergeBlocks","blockElement","remove","$09e991522ca7e64e$require$Field","$de4b3a8076847854$exports","Field","fieldElement","cells","$de4b3a8076847854$var$createCellElements","i","$de4b3a8076847854$var$GRID_SIZE","cell","document","createElement","classList","add","push","append","map","index","Math","floor","cellsByColumns","reduce","gridColumns","cellsByRows","gridRows","randomEmptyCell","emptyCells","filter","random","length","$09e991522ca7e64e$require$Block","$65e0dcc5c1fa3a47$exports","Block","blockContainer","_value","newValue","className","textContent","includes","_x","_y","$09e991522ca7e64e$var$gameField","querySelector","$09e991522ca7e64e$var$field","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$currentScore","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$startButton","$09e991522ca7e64e$var$allowMove","window","addEventListener","$09e991522ca7e64e$var$handleMove","once","$09e991522ca7e64e$var$resetGame","firstChild","removeChild","lastChild","contains","e","code","preventDefault","key","$09e991522ca7e64e$var$canMoveRight","$09e991522ca7e64e$var$moveRight","$09e991522ca7e64e$var$canMoveLeft","$09e991522ca7e64e$var$moveLeft","$09e991522ca7e64e$var$canMoveUp","$09e991522ca7e64e$var$moveUp","$09e991522ca7e64e$var$canMoveDown","$09e991522ca7e64e$var$moveDown","forEach","newMerge","some","$09e991522ca7e64e$var$slideBlocks","groupsOfCells","group","currentCell","lastEmptyCell","j","previousCell","row","reverse","column","$09e991522ca7e64e$var$canMove","groups"],"version":3,"file":"index.81fd8437.js.map"}